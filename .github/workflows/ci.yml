name: Test
on:
  pull_request: {}
  push: 
    branches:
    - master
jobs:
  cargo_test:
    name: Cargo Test
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
      - name: Cache cargo directories
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-test-lib-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-test-lib-
            ${{ runner.os }}-cargo-test-

      - run: cargo test --lib

  regressions:
    name: CSL Test Suite Regressions
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Extract branch name
        shell: bash
        run: |
          GITHUB_HEAD=${{ github.head_ref }}
          GITHUB_BASE=${{ github.base_ref }}

          if test -z "$GITHUB_HEAD"; then
            GITHUB_HEAD="$GITHUB_REF"
          fi
          if test -z "$GITHUB_BASE"; then
            GITHUB_BASE="$GITHUB_REF"
          fi

          # transforms refs/pulls/123/merge into pulls-123-merge
          GITHUB_HEAD=${GITHUB_HEAD#refs/heads/}
          GITHUB_HEAD=$(echo ${GITHUB_HEAD#refs/} | tr '/' '-')
          echo "GITHUB_HEAD = ${GITHUB_HEAD}"
          echo "::set-output name=head::${GITHUB_HEAD}"

          GITHUB_BASE=${GITHUB_BASE#refs/heads/}
          GITHUB_BASE=$(echo ${GITHUB_BASE#refs/} | tr '/' '-')
          echo "GITHUB_BASE = ${GITHUB_BASE}"
          echo "::set-output name=base::${GITHUB_BASE}"

        id: branch
      - name: Download base output
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-southeast-2
          GITHUB_BASE: ${{ steps.branch.outputs.base }}
          GITHUB_HEAD: ${{ steps.branch.outputs.head }}
        run: |
          mkdir -p .snapshots/branches
          aws s3 cp s3://citeproc-rs-test-results/.snapshots/branches/$GITHUB_BASE .snapshots/branches/$GITHUB_BASE

      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
      - name: Cache cargo directories
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-test-suite-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-test-suite-
            ${{ runner.os }}-cargo-test-
      - name: "Build tools package"
        run: cargo build --package tools
      - name: "Pull locales"
        run: cargo pull-locales
      - name: "Log test suite results"
        run: cargo test-suite store
      - name: "Compare test suite results for regressions"
        env:
          GITHUB_BASE: ${{ steps.branch.outputs.base }}
          GITHUB_HEAD: ${{ steps.branch.outputs.head }}
        run: |
          cp .snapshots/current .snapshots/branches/$GITHUB_HEAD
          cargo test-suite diff $GITHUB_BASE..$GITHUB_HEAD
      - name: "Upload test result artifacts"
        if: always()
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-southeast-2
          GITHUB_HEAD: ${{ steps.branch.outputs.head }}
          GITHUB_BASE: ${{ steps.branch.outputs.base }}
        run: |
            aws s3 cp .snapshots/current s3://citeproc-rs-test-results/.snapshots/branches/$GITHUB_HEAD
            aws s3 cp .snapshots/current s3://citeproc-rs-test-results/.snapshots/commits/$GITHUB_SHA

  wasm_tests:
    name: "Test the WASM package"
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust 1.43.1
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.43.1
          override: true
      - name: Cache cargo directories
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            # use "-wasm-target" to cache these separately from the CI workflow
          key: ${{ runner.os }}-cargo-wasm-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-wasm-target-

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh -s -- -f

      - name: Build WASM
        working-directory: crates/wasm
        run: yarn build

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Restore yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Yarn install
        working-directory: crates/wasm/js-tests
        run: yarn install

      - name: Run tests
        working-directory: crates/wasm/js-tests
        run: yarn test

      # otherwise, the yarn cache will contain a different @citeproc-rs/wasm
      # entry every time.
      - name: Clean yarn cache dir of wasm output
        run: |
          cd "$(yarn cache dir)"
          ls | grep citeproc-rs-wasm | xargs rm -rf

